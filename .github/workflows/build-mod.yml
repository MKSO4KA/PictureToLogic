name: Build and Release Mod

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      mod_name: ${{ steps.get_name.outputs.MOD_NAME }}
      build_success: ${{ steps.build_jar.outcome == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build Universal Jar with Gradle
        id: build_jar
        # continue-on-error: true - это ключ. Шаг продолжится, даже если сборка упадет.
        continue-on-error: true
        run: ./gradlew deploy

      - name: Get Mod Name (if successful)
        id: get_name
        if: steps.build_jar.outcome == 'success'
        run: echo "MOD_NAME=$(basename build/libs/*.jar .jar)" >> $GITHUB_OUTPUT

      - name: Upload JAR artifact (if successful)
        if: steps.build_jar.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: mod-jar
          path: build/libs/*.jar

  create-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifact (if successful)
        if: needs.build.outputs.build_success == 'true'
        uses: actions/download-artifact@v4
        with:
          name: mod-jar

      - name: Create Source Code ZIP
        run: zip -r source-code.zip . -x ".git/*" ".github/*" "build/*" ".gradle/*"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Если сборка упала, добавляем суффикс -failed
          tag_name: ${{ github.run_id }}-${{ github.run_number }}${{ needs.build.outputs.build_success == 'false' && '-failed' || '' }}
          # Если сборка упала, помечаем релиз
          name: "Build ${{ github.run_number }} ${{ needs.build.outputs.build_success == 'false' && '[BUILD FAILED]' || '' }}"
          body: "Автоматическая сборка мода. Статус: ${{ needs.build.outputs.build_success == 'true' && 'Успешно' || 'Ошибка' }}"
          # Если сборка упала, создаем черновик
          draft: ${{ needs.build.outputs.build_success == 'false' }}
          # Прикрепляем JAR только если сборка успешна
          files: |
            ${{ needs.build.outputs.build_success == 'true' && format('{0}.jar', needs.build.outputs.mod_name) || '' }}
            source-code.zip
