plugins {
    id 'java'
}

// ВАЖНО: Добавляем этот блок для настройки Toolchain
java {
    // Эта настройка говорит Gradle: "Для компиляции кода этого проекта
    // найди и используй компилятор от Java 8".
    // Это гарантирует 100% совместимость с Mindustry.
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

ext {
    mindustryVersion = "v14" // Используйте актуальную версию Mindustry
}

group = 'com.mkso4ka.mindustry.matrixproc'
version = '1.0-SNAPSHOT'
// Эта строка теперь является дополнением к toolchain. Оставляем ее.
sourceCompatibility = 1.8 

repositories {
    mavenCentral()
    // Репозиторий, где хранятся библиотеки Mindustry
    maven { url "https://raw.githubusercontent.com/Anuken/Mindustry/mvn-repo/repository" }
    // Репозиторий для библиотеки Arc (графический движок Mindustry)
    maven { url "https://jitpack.io" }
}

dependencies {
    // Зависимости для тестов (у вас уже были)
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // !!! КЛЮЧЕВАЯ ЗАВИСИМОСТЬ !!!
    // Мы подключаем ядро Mindustry.
    compileOnly "com.github.Anuken.Mindustry:core:${mindustryVersion}"
    compileOnly "com.github.Anuken.Arc:arc-core:${mindustryVersion}"
}

// Конфигурация задачи сборки JAR-файла
jar {
    // Имя файла, которое вы просили не менять в другом месте, здесь не указывается.
    // Оно берется из archiveBaseName. Давайте зададим его здесь явно.
    archiveBaseName = 'PictureToLogic'

    // Включаем все файлы из папки 'resources' (включая mod.hjson)
    // в корень итогового JAR-файла.
    from('src/main/resources') {
        include '*'
    }
}

test {
    useJUnitPlatform()
}