// core/build.gradle
plugins {
    id 'com.android.library'
}

group = 'com.mkso4ka.mindustry.matrixproc'
version = '1.0'

android {
    namespace 'com.mkso4ka.mindustry.matrixproc'
    compileSdk 33

    defaultConfig {
        minSdk 21
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        androidResources false
        resValues false
        buildConfig false
    }
}

ext{
    mindustryVersion = "v147"
}

dependencies {
    compileOnly "com.github.Anuken.Mindustry:core:${mindustryVersion}"
    compileOnly "com.github.Anuken.Arc:arc-core:${mindustryVersion}"
    compileOnly "com.github.Anuken.Mindustry:android:${mindustryVersion}"
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
}

// --- ФИНАЛЬНАЯ, ИСПРАВЛЕННАЯ ЗАДАЧА ---
task buildUniversalJar(type: Jar) {
    archiveFileName = "PictureToLogic.jar"
    
    // Зависим от стандартных задач сборки, чтобы убедиться, что все файлы готовы
    dependsOn 'bundleReleaseAar', 'compileReleaseJavaWithJavac', 'processReleaseResources'

    // 1. Берем .class файлы из вывода задачи компиляции Java.
    from tasks.getByName("compileReleaseJavaWithJavac").outputs.files
    
    // 2. Берем ресурсы (mod.hjson) из вывода задачи обработки ресурсов.
    from tasks.getByName("processReleaseResources").outputs.files

    // 3. Включаем классы всех 'implementation' зависимостей (NanoHTTPD)
    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // 4. Включаем классы, обработанные для Android (.dex)
    from(zipTree(project.tasks.getByName("bundleReleaseAar").outputs.files.singleFile)) {
        include "classes.jar"
        rename 'classes.jar', 'classes.dex'
    }
}